<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.collections.List.add().newSize&apos; in &apos;com.industriallogic.collections.List.add()&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.add().newSize&apos;" description="Inline local variable &apos;newSize&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.collections{List.java" selection="927 0" stamp="1316623987272" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean shouldGrow()&apos; from &apos;com.industriallogic.collections.List.add()&apos; to &apos;com.industriallogic.collections.List&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;shouldGrow&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.List&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;shouldGrow&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{List.java" name="shouldGrow" replace="false" selection="897 26" stamp="1316624023395" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void grow()&apos; from &apos;com.industriallogic.collections.List.add()&apos; to &apos;com.industriallogic.collections.List&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;grow&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.List&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;grow&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{List.java" name="grow" replace="false" selection="918 163" stamp="1316624046931" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.collections.Set.add().newSize&apos; in &apos;com.industriallogic.collections.Set.add()&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.add().newSize&apos;" description="Inline local variable &apos;newSize&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.collections{Set.java" selection="981 7" stamp="1316624165597" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean shouldGrow()&apos; from &apos;com.industriallogic.collections.Set.add()&apos; to &apos;com.industriallogic.collections.Set&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;shouldGrow&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Set&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;shouldGrow&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Set.java" name="shouldGrow" replace="false" selection="953 26" stamp="1316624193952" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void grow()&apos; from &apos;com.industriallogic.collections.Set.add()&apos; to &apos;com.industriallogic.collections.Set&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;grow&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Set&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;grow&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Set.java" name="grow" replace="false" selection="974 177" stamp="1316624208860" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void addElement(Object element)&apos; from &apos;com.industriallogic.collections.Set.add()&apos; to &apos;com.industriallogic.collections.Set&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;addElement&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Set&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;addElement&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Set.java" name="addElement" replace="false" selection="1034 27" stamp="1316624377373" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void addElement(Object element)&apos; from &apos;com.industriallogic.collections.List.add()&apos; to &apos;com.industriallogic.collections.List&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;addElement&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.List&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;addElement&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{List.java" name="addElement" replace="false" selection="936 27" stamp="1316624592528" version="1.0" visibility="2"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.size&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.size&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="0" description="Pull up &apos;size&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List^size" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316625734817" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.isEmpty()&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.isEmpty()&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="3" description="Pull up &apos;isEmpty()&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List~isEmpty" element2="/src&lt;com.industriallogic.collections{List.java[List~isEmpty" element3="/src&lt;com.industriallogic.collections{Set.java[Set~isEmpty" element4="/src&lt;com.industriallogic.collections{Map.java[Map~isEmpty" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316625760788" stubs="true" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.collections.Map.add().newSize&apos; in &apos;com.industriallogic.collections.Map.add()&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Map.add().newSize&apos;" description="Inline local variable &apos;newSize&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.collections{Map.java" selection="1224 0" stamp="1316625828426" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean shouldGrow()&apos; from &apos;com.industriallogic.collections.Map.add()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Method name: &apos;shouldGrow&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;shouldGrow&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="shouldGrow" replace="false" selection="1193 22" stamp="1316625848919" version="1.0" visibility="2"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.Map.INITIAL_CAPACITY&apos; from &apos;com.industriallogic.collections.Map&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Map.INITIAL_CAPACITY&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="0" description="Pull up &apos;INITIAL_CAPACITY&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{Map.java[Map^INITIAL_CAPACITY" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316626003838" stubs="true" version="1.0"/>&#x0A;<refactoring comment="Push down members from &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original elements:&#x0A;     com.industriallogic.collections.AbstractCollection.size&#x0A;     com.industriallogic.collections.AbstractCollection.isEmpty()&#x0A;- Pushed members:&#x0A;     com.industriallogic.collections.AbstractCollection.size&#x0A;     com.industriallogic.collections.AbstractCollection.isEmpty()" description="Push down" element1="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection^size" element2="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection~isEmpty" flags="589830" id="org.eclipse.jdt.ui.push.down" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" push1="true" push2="true" stamp="1316626354746" version="1.0"/>&#x0A;<refactoring comment="Push down &apos;com.industriallogic.collections.AbstractCollection.addAll(...)&apos; from &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.AbstractCollection.addAll(...)&apos;&#x0A;- Pushed members:&#x0A;     com.industriallogic.collections.AbstractCollection.addAll(...)" description="Push down &apos;addAll&apos;" element1="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection~addAll~QAbstractCollection;" flags="589830" id="org.eclipse.jdt.ui.push.down" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" push1="true" stamp="1316626864836" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.size()&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.size()&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;size()&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List~size" element2="/src&lt;com.industriallogic.collections{List.java[List~size" element3="/src&lt;com.industriallogic.collections{Set.java[Set~size" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316627148667" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.elements&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.elements&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="0" description="Pull up &apos;elements&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List^elements" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316627290238" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.capacity()&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.capacity()&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;capacity()&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List~capacity" element2="/src&lt;com.industriallogic.collections{List.java[List~capacity" element3="/src&lt;com.industriallogic.collections{Set.java[Set~capacity" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316627365307" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.contains(...)&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.contains(...)&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;contains(Object)&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List~contains~QObject;" element2="/src&lt;com.industriallogic.collections{List.java[List~contains~QObject;" element3="/src&lt;com.industriallogic.collections{Set.java[Set~contains~QObject;" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316627479720" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.Set.grow()&apos; from &apos;com.industriallogic.collections.Set&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.grow()&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;grow()&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{Set.java[Set~grow" element2="/src&lt;com.industriallogic.collections{List.java[List~grow" element3="/src&lt;com.industriallogic.collections{Set.java[Set~grow" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316627784131" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.shouldGrow()&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.shouldGrow()&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;shouldGrow()&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List~shouldGrow" element2="/src&lt;com.industriallogic.collections{List.java[List~shouldGrow" element3="/src&lt;com.industriallogic.collections{Set.java[Set~shouldGrow" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316628331770" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.Set.addElement(...)&apos; from &apos;com.industriallogic.collections.Set&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.addElement(...)&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;addElement(Object)&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{Set.java[Set~addElement~QObject;" element2="/src&lt;com.industriallogic.collections{List.java[List~addElement~QObject;" element3="/src&lt;com.industriallogic.collections{Set.java[Set~addElement~QObject;" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316628360884" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up members from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original elements:&#x0A;     com.industriallogic.collections.List.readOnly&#x0A;     com.industriallogic.collections.List.remove(...)&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up members to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List^readOnly" element2="/src&lt;com.industriallogic.collections{List.java[List~remove~QObject;" element3="/src&lt;com.industriallogic.collections{List.java[List~remove~QObject;" element4="/src&lt;com.industriallogic.collections{Set.java[Set~remove~QObject;" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="2" replace="true" stamp="1316629481878" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.Set.setReadOnly(...)&apos; from &apos;com.industriallogic.collections.Set&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.setReadOnly(...)&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;setReadOnly(boolean)&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{Set.java[Set~setReadOnly~Z" element2="/src&lt;com.industriallogic.collections{List.java[List~setReadOnly~Z" element3="/src&lt;com.industriallogic.collections{Set.java[Set~setReadOnly~Z" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316629533832" stubs="true" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.List.add(...)&apos; from &apos;com.industriallogic.collections.List&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.List.add(...)&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="1" description="Pull up &apos;add(Object)&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{List.java[List~add~QObject;" element2="/src&lt;com.industriallogic.collections{List.java[List~add~QObject;" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316630357005" stubs="true" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.collections.Set.getElementAt(...)&apos; to &apos;get&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.getElementAt(...)&apos;&#x0A;- Renamed element: &apos;com.industriallogic.collections.Set.get(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getElementAt&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.industriallogic.collections{Set.java[Set~getElementAt~I" name="get" references="true" stamp="1316630536558" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;index&apos; in &apos;com.industriallogic.collections.Set.get(...)&apos; to &apos;i&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.get(int).index&apos;&#x0A;- Renamed element: &apos;index&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;index&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.industriallogic.collections{Set.java[Set~get~I@index!798!806!802!806!I!0!true" name="i" references="true" stamp="1316630550579" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up &apos;com.industriallogic.collections.Set.get(...)&apos; from &apos;com.industriallogic.collections.Set&apos; to &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Set.get(...)&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.AbstractCollection&apos;&#x0A;- Use super type where possible" delete="2" description="Pull up &apos;get(int)&apos; to &apos;AbstractCollection&apos;" element1="/src&lt;com.industriallogic.collections{Set.java[Set~get~I" element2="/src&lt;com.industriallogic.collections{List.java[List~get~I" element3="/src&lt;com.industriallogic.collections{Set.java[Set~get~I" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection" instanceof="false" pull="1" replace="true" stamp="1316630571539" stubs="true" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.collections.AbstractCollection.fetch(...)&apos; to &apos;ged&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.AbstractCollection.fetch(...)&apos;&#x0A;- Renamed element: &apos;com.industriallogic.collections.AbstractCollection.ged(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;fetch&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection~fetch~I" name="ged" references="true" stamp="1316630829573" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.collections.AbstractCollection.ged(...)&apos; to &apos;fetch&apos;&#x0A;- Original project: &apos;SmellectionsAll-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.AbstractCollection.ged(...)&apos;&#x0A;- Renamed element: &apos;com.industriallogic.collections.AbstractCollection.fetch(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;ged&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.industriallogic.collections{AbstractCollection.java[AbstractCollection~ged~I" name="fetch" references="true" stamp="1316630870836" version="1.0"/>
</session>